import{s as w}from"./index.esm.d9399a29.js";import{O as M,x as v,D as h,L as E,R as I,z as y,A as _,o,b as r,j as u,l as C,g as c,r as p,B as g,k,F as b,f as A,t as D,G as K,i as N,n as x,a0 as L,e as V}from"./entry.497c887e.js";import{s as B}from"./index.esm.b3a9a1b0.js";import{s as F}from"./index.esm.1c7c6a9d.js";import{s as R}from"./index.esm.bcf2261c.js";import"./entry.b871eb40.js";var S={name:"TreeNode",emits:["node-toggle","node-click","checkbox-change"],props:{node:{type:null,default:null},expandedKeys:{type:null,default:null},selectionKeys:{type:null,default:null},selectionMode:{type:String,default:null},templates:{type:null,default:null},level:{type:Number,default:null},index:{type:Number,default:null}},nodeTouched:!1,toggleClicked:!1,mounted(){this.$refs.currentNode.closest(".p-treeselect-items-wrapper")&&this.setAllNodesTabIndexes()},methods:{toggle(){this.$emit("node-toggle",this.node),this.toggleClicked=!0},label(e){return typeof e.label=="function"?e.label():e.label},onChildNodeToggle(e){this.$emit("node-toggle",e)},onClick(e){if(this.toggleClicked||h.hasClass(e.target,"p-tree-toggler")||h.hasClass(e.target.parentElement,"p-tree-toggler")){this.toggleClicked=!1;return}this.isCheckboxSelectionMode()?this.toggleCheckbox():this.$emit("node-click",{originalEvent:e,nodeTouched:this.nodeTouched,node:this.node}),this.nodeTouched=!1},onChildNodeClick(e){this.$emit("node-click",e)},onTouchEnd(){this.nodeTouched=!0},onKeyDown(e){if(this.isSameNode(e))switch(e.code){case"Tab":this.onTabKey(e);break;case"ArrowDown":this.onArrowDown(e);break;case"ArrowUp":this.onArrowUp(e);break;case"ArrowRight":this.onArrowRight(e);break;case"ArrowLeft":this.onArrowLeft(e);break;case"Enter":case"Space":this.onEnterKey(e);break}},onArrowDown(e){const n=e.target,t=n.children[1];if(t)this.focusRowChange(n,t.children[0]);else if(n.nextElementSibling)this.focusRowChange(n,n.nextElementSibling);else{let i=this.findNextSiblingOfAncestor(n);i&&this.focusRowChange(n,i)}e.preventDefault()},onArrowUp(e){const n=e.target;if(n.previousElementSibling)this.focusRowChange(n,n.previousElementSibling,this.findLastVisibleDescendant(n.previousElementSibling));else{let t=this.getParentNodeElement(n);t&&this.focusRowChange(n,t)}e.preventDefault()},onArrowRight(e){this.leaf||this.expanded||(e.currentTarget.tabIndex=-1,this.$emit("node-toggle",this.node),this.$nextTick(()=>{this.onArrowDown(e)}))},onArrowLeft(e){const n=h.findSingle(e.currentTarget,".p-tree-toggler");if(this.level===0&&!this.expanded)return!1;if(this.expanded&&!this.leaf)return n.click(),!1;const t=this.findBeforeClickableNode(e.currentTarget);t&&this.focusRowChange(e.currentTarget,t)},onEnterKey(e){this.setTabIndexForSelectionMode(e,this.nodeTouched),this.onClick(e),e.preventDefault()},onTabKey(){this.setAllNodesTabIndexes()},setAllNodesTabIndexes(){const e=h.find(this.$refs.currentNode.closest(".p-tree-container"),".p-treenode"),n=[...e].some(t=>t.getAttribute("aria-selected")==="true"||t.getAttribute("aria-checked")==="true");if([...e].forEach(t=>{t.tabIndex=-1}),n){const t=[...e].filter(i=>i.getAttribute("aria-selected")==="true"||i.getAttribute("aria-checked")==="true");t[0].tabIndex=0;return}[...e][0].tabIndex=0},setTabIndexForSelectionMode(e,n){if(this.selectionMode!==null){const t=[...h.find(this.$refs.currentNode.parentElement,".p-treenode")];e.currentTarget.tabIndex=n===!1?-1:0,t.every(i=>i.tabIndex===-1)&&(t[0].tabIndex=0)}},focusRowChange(e,n,t){e.tabIndex="-1",n.tabIndex="0",this.focusNode(t||n)},findBeforeClickableNode(e){const n=e.closest("ul").closest("li");if(n){const t=h.findSingle(n,"button");return t&&t.style.visibility!=="hidden"?n:this.findBeforeClickableNode(e.previousElementSibling)}return null},toggleCheckbox(){let e=this.selectionKeys?{...this.selectionKeys}:{};const n=!this.checked;this.propagateDown(this.node,n,e),this.$emit("checkbox-change",{node:this.node,check:n,selectionKeys:e})},propagateDown(e,n,t){if(n?t[e.key]={checked:!0,partialChecked:!1}:delete t[e.key],e.children&&e.children.length)for(let i of e.children)this.propagateDown(i,n,t)},propagateUp(e){let n=e.check,t={...e.selectionKeys},i=0,s=!1;for(let l of this.node.children)t[l.key]&&t[l.key].checked?i++:t[l.key]&&t[l.key].partialChecked&&(s=!0);n&&i===this.node.children.length?t[this.node.key]={checked:!0,partialChecked:!1}:(n||delete t[this.node.key],s||i>0&&i!==this.node.children.length?t[this.node.key]={checked:!1,partialChecked:!0}:delete t[this.node.key]),this.$emit("checkbox-change",{node:e.node,check:e.check,selectionKeys:t})},onChildCheckboxChange(e){this.$emit("checkbox-change",e)},findNextSiblingOfAncestor(e){let n=this.getParentNodeElement(e);return n?n.nextElementSibling?n.nextElementSibling:this.findNextSiblingOfAncestor(n):null},findLastVisibleDescendant(e){const n=e.children[1];if(n){const t=n.children[n.children.length-1];return this.findLastVisibleDescendant(t)}else return e},getParentNodeElement(e){const n=e.parentElement.parentElement;return h.hasClass(n,"p-treenode")?n:null},focusNode(e){e.focus()},isCheckboxSelectionMode(){return this.selectionMode==="checkbox"},isSameNode(e){return e.currentTarget&&(e.currentTarget.isSameNode(e.target)||e.currentTarget.isSameNode(e.target.closest(".p-treenode")))}},computed:{hasChildren(){return this.node.children&&this.node.children.length>0},expanded(){return this.expandedKeys&&this.expandedKeys[this.node.key]===!0},leaf(){return this.node.leaf===!1?!1:!(this.node.children&&this.node.children.length)},selectable(){return this.node.selectable===!1?!1:this.selectionMode!=null},selected(){return this.selectionMode&&this.selectionKeys?this.selectionKeys[this.node.key]===!0:!1},containerClass(){return["p-treenode",{"p-treenode-leaf":this.leaf}]},contentClass(){return["p-treenode-content",this.node.styleClass,{"p-treenode-selectable":this.selectable,"p-highlight":this.checkboxMode?this.checked:this.selected}]},icon(){return["p-treenode-icon",this.node.icon]},checkboxClass(){return["p-checkbox-box",{"p-highlight":this.checked,"p-indeterminate":this.partialChecked}]},checkboxMode(){return this.selectionMode==="checkbox"&&this.node.selectable!==!1},checked(){return this.selectionKeys?this.selectionKeys[this.node.key]&&this.selectionKeys[this.node.key].checked:!1},partialChecked(){return this.selectionKeys?this.selectionKeys[this.node.key]&&this.selectionKeys[this.node.key].partialChecked:!1},ariaChecked(){return this.selectionMode==="single"||this.selectionMode==="multiple"?this.selected:void 0},ariaSelected(){return this.checkboxMode?this.checked:void 0}},components:{ChevronDownIcon:B,ChevronRightIcon:F,CheckIcon:E,MinusIcon:R},directives:{ripple:I}};const P=["aria-label","aria-selected","aria-expanded","aria-setsize","aria-posinset","aria-level","aria-checked","tabindex"],z={key:0,class:"p-checkbox p-component","aria-hidden":"true"},U={class:"p-treenode-label"},O={key:0,class:"p-treenode-children",role:"group"};function j(e,n,t,i,s,l){const a=y("TreeNode",!0),m=_("ripple");return o(),r("li",{ref:"currentNode",class:g(l.containerClass),role:"treeitem","aria-label":l.label(t.node),"aria-selected":l.ariaSelected,"aria-expanded":l.expanded,"aria-setsize":t.node.children?t.node.children.length:0,"aria-posinset":t.index+1,"aria-level":t.level,"aria-checked":l.ariaChecked,tabindex:t.index===0?0:-1,onKeydown:n[3]||(n[3]=(...d)=>l.onKeyDown&&l.onKeyDown(...d))},[u("div",{class:g(l.contentClass),onClick:n[1]||(n[1]=(...d)=>l.onClick&&l.onClick(...d)),onTouchend:n[2]||(n[2]=(...d)=>l.onTouchEnd&&l.onTouchEnd(...d)),style:K(t.node.style)},[C((o(),r("button",{type:"button",class:"p-tree-toggler p-link",onClick:n[0]||(n[0]=(...d)=>l.toggle&&l.toggle(...d)),tabindex:"-1","aria-hidden":"true"},[t.templates.togglericon?(o(),c(p(t.templates.togglericon),{key:0,node:t.node,expanded:l.expanded,class:"p-tree-toggler-icon"},null,8,["node","expanded"])):l.expanded?(o(),c(p(t.node.expandedIcon?"span":"ChevronDownIcon"),{key:1,class:"p-tree-toggler-icon"})):(o(),c(p(t.node.collapsedIcon?"span":"ChevronRightIcon"),{key:2,class:"p-tree-toggler-icon"}))])),[[m]]),l.checkboxMode?(o(),r("div",z,[u("div",{class:g(l.checkboxClass),role:"checkbox"},[t.templates.checkboxicon?(o(),c(p(t.templates.checkboxicon),{key:0,checked:l.checked,partialChecked:l.partialChecked,class:"p-checkbox-icon"},null,8,["checked","partialChecked"])):(o(),c(p(l.checked?"CheckIcon":l.partialChecked?"MinusIcon":null),{key:1,class:"p-checkbox-icon"}))],2)])):k("",!0),u("span",{class:g(l.icon)},null,2),u("span",U,[t.templates[t.node.type]||t.templates.default?(o(),c(p(t.templates[t.node.type]||t.templates.default),{key:0,node:t.node},null,8,["node"])):(o(),r(b,{key:1},[A(D(l.label(t.node)),1)],64))])],38),l.hasChildren&&l.expanded?(o(),r("ul",O,[(o(!0),r(b,null,N(t.node.children,d=>(o(),c(a,{key:d.key,node:d,templates:t.templates,level:t.level+1,expandedKeys:t.expandedKeys,onNodeToggle:l.onChildNodeToggle,onNodeClick:l.onChildNodeClick,selectionMode:t.selectionMode,selectionKeys:t.selectionKeys,onCheckboxChange:l.propagateUp},null,8,["node","templates","level","expandedKeys","onNodeToggle","onNodeClick","selectionMode","selectionKeys","onCheckboxChange"]))),128))])):k("",!0)],42,P)}S.render=j;var H={name:"Tree",emits:["node-expand","node-collapse","update:expandedKeys","update:selectionKeys","node-select","node-unselect"],props:{value:{type:null,default:null},expandedKeys:{type:null,default:null},selectionKeys:{type:null,default:null},selectionMode:{type:String,default:null},metaKeySelection:{type:Boolean,default:!0},loading:{type:Boolean,default:!1},loadingIcon:{type:String,default:void 0},filter:{type:Boolean,default:!1},filterBy:{type:String,default:"label"},filterMode:{type:String,default:"lenient"},filterPlaceholder:{type:String,default:null},filterLocale:{type:String,default:void 0},scrollHeight:{type:String,default:null},level:{type:Number,default:0},"aria-labelledby":{type:String,default:null},"aria-label":{type:String,default:null}},data(){return{d_expandedKeys:this.expandedKeys||{},filterValue:null}},watch:{expandedKeys(e){this.d_expandedKeys=e}},methods:{onNodeToggle(e){const n=e.key;this.d_expandedKeys[n]?(delete this.d_expandedKeys[n],this.$emit("node-collapse",e)):(this.d_expandedKeys[n]=!0,this.$emit("node-expand",e)),this.d_expandedKeys={...this.d_expandedKeys},this.$emit("update:expandedKeys",this.d_expandedKeys)},onNodeClick(e){if(this.selectionMode!=null&&e.node.selectable!==!1){const t=(e.nodeTouched?!1:this.metaKeySelection)?this.handleSelectionWithMetaKey(e):this.handleSelectionWithoutMetaKey(e);this.$emit("update:selectionKeys",t)}},onCheckboxChange(e){this.$emit("update:selectionKeys",e.selectionKeys),e.check?this.$emit("node-select",e.node):this.$emit("node-unselect",e.node)},handleSelectionWithMetaKey(e){const n=e.originalEvent,t=e.node,i=n.metaKey||n.ctrlKey,s=this.isNodeSelected(t);let l;return s&&i?(this.isSingleSelectionMode()?l={}:(l={...this.selectionKeys},delete l[t.key]),this.$emit("node-unselect",t)):(this.isSingleSelectionMode()?l={}:this.isMultipleSelectionMode()&&(l=i?this.selectionKeys?{...this.selectionKeys}:{}:{}),l[t.key]=!0,this.$emit("node-select",t)),l},handleSelectionWithoutMetaKey(e){const n=e.node,t=this.isNodeSelected(n);let i;return this.isSingleSelectionMode()?t?(i={},this.$emit("node-unselect",n)):(i={},i[n.key]=!0,this.$emit("node-select",n)):t?(i={...this.selectionKeys},delete i[n.key],this.$emit("node-unselect",n)):(i=this.selectionKeys?{...this.selectionKeys}:{},i[n.key]=!0,this.$emit("node-select",n)),i},isSingleSelectionMode(){return this.selectionMode==="single"},isMultipleSelectionMode(){return this.selectionMode==="multiple"},isNodeSelected(e){return this.selectionMode&&this.selectionKeys?this.selectionKeys[e.key]===!0:!1},isChecked(e){return this.selectionKeys?this.selectionKeys[e.key]&&this.selectionKeys[e.key].checked:!1},isNodeLeaf(e){return e.leaf===!1?!1:!(e.children&&e.children.length)},onFilterKeydown(e){e.which===13&&e.preventDefault()},findFilteredNodes(e,n){if(e){let t=!1;if(e.children){let i=[...e.children];e.children=[];for(let s of i){let l={...s};this.isFilterMatched(l,n)&&(t=!0,e.children.push(l))}}if(t)return!0}},isFilterMatched(e,{searchFields:n,filterText:t,strict:i}){let s=!1;for(let l of n)String(M.resolveFieldData(e,l)).toLocaleLowerCase(this.filterLocale).indexOf(t)>-1&&(s=!0);return(!s||i&&!this.isNodeLeaf(e))&&(s=this.findFilteredNodes(e,{searchFields:n,filterText:t,strict:i})||s),s}},computed:{containerClass(){return["p-tree p-component",{"p-tree-selectable":this.selectionMode!=null,"p-tree-loading":this.loading,"p-tree-flex-scrollable":this.scrollHeight==="flex"}]},filteredValue(){let e=[];const n=this.filterBy.split(","),t=this.filterValue.trim().toLocaleLowerCase(this.filterLocale),i=this.filterMode==="strict";for(let s of this.value){let l={...s},a={searchFields:n,filterText:t,strict:i};(i&&(this.findFilteredNodes(l,a)||this.isFilterMatched(l,a))||!i&&(this.isFilterMatched(l,a)||this.findFilteredNodes(l,a)))&&e.push(l)}return e},valueToRender(){return this.filterValue&&this.filterValue.trim().length>0?this.filteredValue:this.value}},components:{TreeNode:S,SearchIcon:w,SpinnerIcon:v}};const W={key:0,class:"p-tree-loading-overlay p-component-overlay"},G={key:1,class:"p-tree-filter-container"},q=["placeholder"],J=["aria-labelledby","aria-label"];function Q(e,n,t,i,s,l){const a=y("SpinnerIcon"),m=y("SearchIcon"),d=y("TreeNode");return o(),r("div",{class:g(l.containerClass)},[t.loading?(o(),r("div",W,[x(e.$slots,"loadingicon",{},()=>[t.loadingIcon?(o(),r("i",{key:0,class:g(["p-tree-loading-icon pi-spin",t.loadingIcon])},null,2)):(o(),c(a,{key:1,spin:"",class:"p-tree-loading-icon"}))])])):k("",!0),t.filter?(o(),r("div",G,[C(u("input",{"onUpdate:modelValue":n[0]||(n[0]=f=>s.filterValue=f),type:"text",autocomplete:"off",class:"p-tree-filter p-inputtext p-component",placeholder:t.filterPlaceholder,onKeydown:n[1]||(n[1]=(...f)=>l.onFilterKeydown&&l.onFilterKeydown(...f))},null,40,q),[[L,s.filterValue]]),x(e.$slots,"searchicon",{},()=>[V(m,{class:"p-tree-filter-icon"})])])):k("",!0),u("div",{class:"p-tree-wrapper",style:K({maxHeight:t.scrollHeight})},[u("ul",{class:"p-tree-container",role:"tree","aria-labelledby":e.ariaLabelledby,"aria-label":e.ariaLabel},[(o(!0),r(b,null,N(l.valueToRender,(f,T)=>(o(),c(d,{key:f.key,node:f,templates:e.$slots,level:t.level+1,index:T,expandedKeys:s.d_expandedKeys,onNodeToggle:l.onNodeToggle,onNodeClick:l.onNodeClick,selectionMode:t.selectionMode,selectionKeys:t.selectionKeys,onCheckboxChange:l.onCheckboxChange},null,8,["node","templates","level","index","expandedKeys","onNodeToggle","onNodeClick","selectionMode","selectionKeys","onCheckboxChange"]))),128))],8,J)],4)],2)}function X(e,n){n===void 0&&(n={});var t=n.insertAt;if(!(!e||typeof document>"u")){var i=document.head||document.getElementsByTagName("head")[0],s=document.createElement("style");s.type="text/css",t==="top"&&i.firstChild?i.insertBefore(s,i.firstChild):i.appendChild(s),s.styleSheet?s.styleSheet.cssText=e:s.appendChild(document.createTextNode(e))}}var Y=`
.p-tree-container {
    margin: 0;
    padding: 0;
    list-style-type: none;
    overflow: auto;
}
.p-treenode-children {
    margin: 0;
    padding: 0;
    list-style-type: none;
}
.p-tree-wrapper {
    overflow: auto;
}
.p-treenode-selectable {
    cursor: pointer;
    user-select: none;
}
.p-tree-toggler {
    cursor: pointer;
    user-select: none;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
    position: relative;
    flex-shrink: 0;
}
.p-treenode-leaf > .p-treenode-content .p-tree-toggler {
    visibility: hidden;
}
.p-treenode-content {
    display: flex;
    align-items: center;
}
.p-tree-filter {
    width: 100%;
}
.p-tree-filter-container {
    position: relative;
    display: block;
    width: 100%;
}
.p-tree-filter-icon {
    position: absolute;
    top: 50%;
    margin-top: -0.5rem;
}
.p-tree-loading {
    position: relative;
    min-height: 4rem;
}
.p-tree .p-tree-loading-overlay {
    position: absolute;
    z-index: 1;
    display: flex;
    align-items: center;
    justify-content: center;
}
.p-tree-flex-scrollable {
    display: flex;
    flex: 1;
    height: 100%;
    flex-direction: column;
}
.p-tree-flex-scrollable .p-tree-wrapper {
    flex: 1;
}
`;X(Y);H.render=Q;export{H as default};
